# 整数，可以处理任意大小的整数，当然包括负整数，十六进制表示整数比较方便，十六进制用0x前缀和0-9，a-f表示
print('---整数---')
print(100)
print(-100)
print(0x2123ab)

# 浮点数，为按照科学记数法表示时，一个浮点数的小数点位置是可变的
# 整数和浮点数在计算机内部存储的方式是不同的，整数运算永远是精确的（除法难道也是精确的？是的！），而浮点数运算则可能会有四舍五入的误差。
print('---浮点数---')
print(1.23e12)

# 字符串，字符串是以单引号'或双引号"括起来的任意文本，字符串内部既包含'又包含"怎么办？可以用转义字符\来标识。
print('---字符串---')
print('这个是字符串')
print('i am ok')
print('i\'am \"ok\"')
# \n表示换行，\t表示制表符，字符\本身也要转义，所以\\表示的字符就是
print('I\'m learning\nPython.')
print('\\\n\\')
# 为了简化，Python还允许用r''表示''内部的字符串默认不转义
print('\\\t\\')
print(r'\\\t\\')
# 为了简化，Python允许用'''...'''的格式表示多行内容,多行字符串'''...'''还可以在前面加上r使用
print('''line1
line2
line3''')

# 布尔值，布尔值和布尔代数的表示完全一致，可以直接用True、False表示布尔值（请注意大小写）
# and运算是与运算，只有所有都为True，and运算结果才是True
# or运算是或运算，只要其中有一个为True，or运算结果就是True
# not运算是非运算，它是一个单目运算符，把True变成False，False变成True
print('---布尔值---')
print(True)
print(False)

# 空值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值。

# 变量，变量不仅可以是数字，还可以是任意数据类型。变量在程序中就是用一个变量名表示了，变量名必须是大小写英文、数字和_的组合，且不能用数字开头
a = 1
s_007 = 's007'
answer = True
# 这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。
# int a1 = 123; # a1是整数类型变量
# a1 = "ABC"; # 错误：不能把字符串赋给整型变量
aa = 'ABC'  # 在内存中创建了一个'ABC'的字符串； 在内存中创建了一个名为aa的变量，并把它指向'ABC'。

# 常量，在Python中，通常用全部大写的变量名表示常量
PI = 3.14  # 事实上dPI仍然是一个变量，Python根本没有任何机制保证PI不会被改变，所以，用全部大写的变量名表示常量只是一个习惯上的用法

# 除法，在Python中，有两种除法，一种除法是/，还有一种除法是//，称为地板除
print('---除法---')
print(10 / 3)  # 求除法的精确结果
print(10 // 3)  # 求商
print(10 % 3)  # 求余数

# 注意：Python的整数没有大小限制，而某些语言的整数根据其存储长度是有大小限制的，例如Java对32位整数的范围限制在-2147483648-2147483647。
# Python的浮点数也没有大小限制，但是超出一定范围就直接表示为inf（无限大）。s
